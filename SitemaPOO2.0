class Produto:
    def __init__(self, nome, quantidade, preco):
        self.nome = nome
        self.quantidade = quantidade
        self.preco = preco

    def atualizar_quantidade(self, nova_quantidade):
        if nova_quantidade >= 0:
            self.quantidade = nova_quantidade
            print(f"Quantidade do produto '{self.nome}' atualizada para {self.quantidade}.")
        else:
            print("Quantidade inválida. Não é possível ter quantidade negativa.")

    def atualizar_preco(self, novo_preco):
        if novo_preco >= 0:
            self.preco = novo_preco
            print(f"Preço do produto '{self.nome}' atualizado para R$ {self.preco:.2f}.")
        else:
            print("Preço inválido. Não é possível ter preço negativo.")

class Estoque:
    def __init__(self):
        self.produtos = []

    def cadastrar_produto(self):
        nome = input("Digite o nome do produto: ")
        quantidade = int(input("Digite a quantidade do produto: "))
        preco = float(input("Digite o preço do produto: "))
        self.produtos.append(Produto(nome, quantidade, preco))
        print(f"Produto '{nome}' adicionado com sucesso!")

    def listar_produtos(self):
        if not self.produtos:
            print("O estoque está vazio.")
        else:
            print("\nProdutos no estoque:")
            for produto in self.produtos:
                print(f"Nome: {produto.nome}, Quantidade: {produto.quantidade}, Preço: R$ {produto.preco:.2f}")

    def calcular_valor_total(self):
        if not self.produtos:
            print("O estoque está vazio.")
        else:
            total = 0
            print("\nResumo do estoque:")
            for produto in self.produtos:
                valor_produto = produto.quantidade * produto.preco
                total += valor_produto
                print(f"Nome: {produto.nome}, Quantidade: {produto.quantidade}, Preço Unitário: R$ {produto.preco:.2f}, Valor Total: R$ {valor_produto:.2f}")
            print(f"\nValor total do estoque: R$ {total:.2f}")

    def remover_produto(self):
        nome = input("Digite o nome do produto que deseja remover: ")
        for produto in self.produtos:
            if produto.nome.lower() == nome.lower():
                self.produtos.remove(produto)
                print(f"Produto '{nome}' removido com sucesso!")
                return
        print(f"Produto '{nome}' não encontrado no estoque.")

    def atualizar_produto(self):
        nome = input("Digite o nome do produto que deseja atualizar: ")
        for produto in self.produtos:
            if produto.nome.lower() == nome.lower():
                print("\n1 - Atualizar quantidade")
                print("2 - Atualizar preço")
                opcao = input("Escolha uma opção: ")
                if opcao == "1":
                    nova_quantidade = int(input("Digite a nova quantidade: "))
                    produto.atualizar_quantidade(nova_quantidade)
                elif opcao == "2":
                    novo_preco = float(input("Digite o novo preço: "))
                    produto.atualizar_preco(novo_preco)
                else:
                    print("Opção inválida.")
                return
        print(f"Produto '{nome}' não encontrado no estoque.")

def exibir_menu():
    estoque = Estoque()

    while True:
        print("\nSeja bem-vindo ao seu Estoque Virtual!")
        print("1 - Cadastrar produto")
        print("2 - Verificar produtos do estoque")
        print("3 - Calcular valor total do estoque")
        print("4 - Remover produto do estoque")
        print("5 - Atualizar produto")
        print("6 - Sair")

        resposta = input("O que gostaria de fazer? ")

        if resposta == "1":
            estoque.cadastrar_produto()
        elif resposta == "2":
            estoque.listar_produtos()
        elif resposta == "3":
            estoque.calcular_valor_total()
        elif resposta == "4":
            estoque.remover_produto()
        elif resposta == "5":
            estoque.atualizar_produto()
        elif resposta == "6":
            print("Saindo do sistema. Até logo!")
            break
        else:
            print("Opção inválida. Tente novamente.")

if __name__ == "__main__":
    exibir_menu()
